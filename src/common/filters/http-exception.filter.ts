import type {
  ArgumentsHost,
  ExceptionFilter,
  HttpException,
} from '@hestjs/core';
import { createLogger } from '@hestjs/core';

const logger = createLogger('HttpExceptionFilter');

/**
 * è‡ªå®šä¹‰ HTTP å¼‚å¸¸è¿‡æ»¤å™¨
 */
export class HttpExceptionFilter implements ExceptionFilter<HttpException> {
  catch(exception: HttpException, host: ArgumentsHost) {
    const ctx = host.getContext();
    const request = host.getRequest();

    const status = exception.status;
    const response = {
      statusCode: status,
      timestamp: new Date().toISOString(),
      path: request.url,
      message: exception.message,
      error: exception.error || 'Http Exception',
    };

    logger.error(`ðŸ”¥ HTTP Exception [${status}]: ${exception.message}`, {
      requestUrl: request.url,
      stack: exception.stack,
    });

    return ctx.json(response, status);
  }
}
